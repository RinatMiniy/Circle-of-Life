{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst fetchMonthsData = createAsyncThunk(\"monthsData/get\", async () => {\n  const response = await fetch(`http://localhost:3002/data`);\n  const data = await response.json();\n  return data;\n});\nconst monthsDataSlice = createSlice({\n  name: \"monthsData\",\n  initialState: [],\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(fetchMonthsData.fulfilled, (state, action) => {});\n  }\n});\nexport { fetchMonthsData };\nexport const monthsDataReducer = monthsDataSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchMonthsData","response","fetch","data","json","monthsDataSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","monthsDataReducer","reducer"],"sources":["/Users/solidera/Documents/GitHub/Circle-of-Life/src/store/monthsDataSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nconst fetchMonthsData = createAsyncThunk(\"monthsData/get\", async () => {\n  const response = await fetch(`http://localhost:3002/data`);\n  const data = await response.json();\n  return data\n})\n\nconst monthsDataSlice = createSlice({\n  name: \"monthsData\",\n  initialState:[],\n  reducers:{\n\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchMonthsData.fulfilled, (state, action) => {\n\n    });\n  }\n})\n\nexport { fetchMonthsData } \nexport const monthsDataReducer = monthsDataSlice.reducer"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACrE,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,4BAA2B,CAAC;EAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC,CAAC;AAEF,MAAME,eAAe,GAAGN,WAAW,CAAC;EAClCO,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC,CAET,CAAC;EACDC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACX,eAAe,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK,CAE9D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,SAASd,eAAe;AACxB,OAAO,MAAMe,iBAAiB,GAAGV,eAAe,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}