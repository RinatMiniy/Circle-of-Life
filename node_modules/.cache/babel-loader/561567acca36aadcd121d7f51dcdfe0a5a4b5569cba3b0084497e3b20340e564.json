{"ast":null,"code":"var _jsxFileName = \"/Users/solidera/Documents/GitHub/Circle-of-Life/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst SERVER_URL = 'http://localhost:3002/students';\n\n// Основная функция для получения всех задач.\n// Она принимает строку запроса и адрес сервера\nasync function getTodos(query) {\n  let endpoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SERVER_URL;\n  try {\n    // Определяем наличие строки запроса\n    query ? query = `?${query}` : query = '';\n    const response = await fetch(`${endpoint}${query}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const json = await response.json();\n    console.log(json);\n    return json;\n  } catch (err) {\n    console.error(err.message || err);\n  }\n}\ngetTodos();\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","SERVER_URL","getTodos","query","endpoint","arguments","length","undefined","response","fetch","ok","Error","statusText","json","console","log","err","error","message","$RefreshReg$"],"sources":["/Users/solidera/Documents/GitHub/Circle-of-Life/src/App.js"],"sourcesContent":["function App() {\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nconst SERVER_URL = 'http://localhost:3002/students'\n\n// Основная функция для получения всех задач.\n// Она принимает строку запроса и адрес сервера\nasync function getTodos(query, endpoint = SERVER_URL) {\n  try {\n    // Определяем наличие строки запроса\n    query ? (query = `?${query}`) : (query = '')\n\n    const response = await fetch(`${endpoint}${query}`)\n\n    if (!response.ok) throw new Error(response.statusText)\n\n    const json = await response.json()\n    console.log(json)\n    return json\n  } catch (err) {\n    console.error(err.message || err)\n  }\n}\ngetTodos()\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,GAAGA,CAAA,EAAG;EACb,oBACEC,OAAA;IAAKC,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACC,EAAA,GANQP,GAAG;AAQZ,MAAMQ,UAAU,GAAG,gCAAgC;;AAEnD;AACA;AACA,eAAeC,QAAQA,CAACC,KAAK,EAAyB;EAAA,IAAvBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,UAAU;EAClD,IAAI;IACF;IACAE,KAAK,GAAIA,KAAK,GAAI,IAAGA,KAAM,EAAC,GAAKA,KAAK,GAAG,EAAG;IAE5C,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,GAAED,KAAM,EAAC,CAAC;IAEnD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAACH,QAAQ,CAACI,UAAU,CAAC;IAEtD,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAACE,OAAO,IAAIF,GAAG,CAAC;EACnC;AACF;AACAd,QAAQ,CAAC,CAAC;AAEV,eAAeT,GAAG;AAAC,IAAAO,EAAA;AAAAmB,YAAA,CAAAnB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}